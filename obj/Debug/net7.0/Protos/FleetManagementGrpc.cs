// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/fleetManagement.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace FleetManagement {
  public static partial class FleetService
  {
    static readonly string __ServiceName = "fleet.FleetService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.VehicleQuery> __Marshaller_fleet_VehicleQuery = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.VehicleQuery.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.Vehicle> __Marshaller_fleet_Vehicle = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.Vehicle.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.PutVehicleQuery> __Marshaller_fleet_PutVehicleQuery = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.PutVehicleQuery.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.InfoRequestResponse> __Marshaller_fleet_InfoRequestResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.InfoRequestResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.DriverQuery> __Marshaller_fleet_DriverQuery = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.DriverQuery.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.Driver> __Marshaller_fleet_Driver = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.Driver.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.PutDriverQuery> __Marshaller_fleet_PutDriverQuery = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.PutDriverQuery.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.RouteQuery> __Marshaller_fleet_RouteQuery = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.RouteQuery.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.Route> __Marshaller_fleet_Route = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.Route.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.PutRouteQuery> __Marshaller_fleet_PutRouteQuery = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.PutRouteQuery.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.WaypointQuery> __Marshaller_fleet_WaypointQuery = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.WaypointQuery.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.Waypoint> __Marshaller_fleet_Waypoint = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.Waypoint.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.PutWaypointQuery> __Marshaller_fleet_PutWaypointQuery = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.PutWaypointQuery.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.LocationQuery> __Marshaller_fleet_LocationQuery = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.LocationQuery.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.LocationUpdate> __Marshaller_fleet_LocationUpdate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.LocationUpdate.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.AssignDriverRequest> __Marshaller_fleet_AssignDriverRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.AssignDriverRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.PutRouteStatusQuery> __Marshaller_fleet_PutRouteStatusQuery = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.PutRouteStatusQuery.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::FleetManagement.RouteStatusUpdate> __Marshaller_fleet_RouteStatusUpdate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::FleetManagement.RouteStatusUpdate.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.VehicleQuery, global::FleetManagement.Vehicle> __Method_GetVehicle = new grpc::Method<global::FleetManagement.VehicleQuery, global::FleetManagement.Vehicle>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetVehicle",
        __Marshaller_fleet_VehicleQuery,
        __Marshaller_fleet_Vehicle);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.PutVehicleQuery, global::FleetManagement.InfoRequestResponse> __Method_UpdateVehicle = new grpc::Method<global::FleetManagement.PutVehicleQuery, global::FleetManagement.InfoRequestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateVehicle",
        __Marshaller_fleet_PutVehicleQuery,
        __Marshaller_fleet_InfoRequestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.Vehicle, global::FleetManagement.InfoRequestResponse> __Method_AddVehicle = new grpc::Method<global::FleetManagement.Vehicle, global::FleetManagement.InfoRequestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddVehicle",
        __Marshaller_fleet_Vehicle,
        __Marshaller_fleet_InfoRequestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.VehicleQuery, global::FleetManagement.InfoRequestResponse> __Method_DeleteVehicle = new grpc::Method<global::FleetManagement.VehicleQuery, global::FleetManagement.InfoRequestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteVehicle",
        __Marshaller_fleet_VehicleQuery,
        __Marshaller_fleet_InfoRequestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.DriverQuery, global::FleetManagement.Driver> __Method_GetDriver = new grpc::Method<global::FleetManagement.DriverQuery, global::FleetManagement.Driver>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDriver",
        __Marshaller_fleet_DriverQuery,
        __Marshaller_fleet_Driver);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.PutDriverQuery, global::FleetManagement.InfoRequestResponse> __Method_UpdateDriver = new grpc::Method<global::FleetManagement.PutDriverQuery, global::FleetManagement.InfoRequestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDriver",
        __Marshaller_fleet_PutDriverQuery,
        __Marshaller_fleet_InfoRequestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.Driver, global::FleetManagement.InfoRequestResponse> __Method_AddDriver = new grpc::Method<global::FleetManagement.Driver, global::FleetManagement.InfoRequestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddDriver",
        __Marshaller_fleet_Driver,
        __Marshaller_fleet_InfoRequestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.DriverQuery, global::FleetManagement.InfoRequestResponse> __Method_DeleteDriver = new grpc::Method<global::FleetManagement.DriverQuery, global::FleetManagement.InfoRequestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDriver",
        __Marshaller_fleet_DriverQuery,
        __Marshaller_fleet_InfoRequestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.RouteQuery, global::FleetManagement.Route> __Method_GetRoute = new grpc::Method<global::FleetManagement.RouteQuery, global::FleetManagement.Route>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRoute",
        __Marshaller_fleet_RouteQuery,
        __Marshaller_fleet_Route);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.PutRouteQuery, global::FleetManagement.InfoRequestResponse> __Method_UpdateRoute = new grpc::Method<global::FleetManagement.PutRouteQuery, global::FleetManagement.InfoRequestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRoute",
        __Marshaller_fleet_PutRouteQuery,
        __Marshaller_fleet_InfoRequestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.Route, global::FleetManagement.InfoRequestResponse> __Method_AddRoute = new grpc::Method<global::FleetManagement.Route, global::FleetManagement.InfoRequestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddRoute",
        __Marshaller_fleet_Route,
        __Marshaller_fleet_InfoRequestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.RouteQuery, global::FleetManagement.InfoRequestResponse> __Method_DeleteRoute = new grpc::Method<global::FleetManagement.RouteQuery, global::FleetManagement.InfoRequestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRoute",
        __Marshaller_fleet_RouteQuery,
        __Marshaller_fleet_InfoRequestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.WaypointQuery, global::FleetManagement.Waypoint> __Method_GetWaypoint = new grpc::Method<global::FleetManagement.WaypointQuery, global::FleetManagement.Waypoint>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWaypoint",
        __Marshaller_fleet_WaypointQuery,
        __Marshaller_fleet_Waypoint);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.PutWaypointQuery, global::FleetManagement.InfoRequestResponse> __Method_UpdateWaypoint = new grpc::Method<global::FleetManagement.PutWaypointQuery, global::FleetManagement.InfoRequestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateWaypoint",
        __Marshaller_fleet_PutWaypointQuery,
        __Marshaller_fleet_InfoRequestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.Waypoint, global::FleetManagement.InfoRequestResponse> __Method_AddWaypoint = new grpc::Method<global::FleetManagement.Waypoint, global::FleetManagement.InfoRequestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddWaypoint",
        __Marshaller_fleet_Waypoint,
        __Marshaller_fleet_InfoRequestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.WaypointQuery, global::FleetManagement.InfoRequestResponse> __Method_DeleteWaypoint = new grpc::Method<global::FleetManagement.WaypointQuery, global::FleetManagement.InfoRequestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteWaypoint",
        __Marshaller_fleet_WaypointQuery,
        __Marshaller_fleet_InfoRequestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.LocationQuery, global::FleetManagement.LocationUpdate> __Method_GetLocationUpdate = new grpc::Method<global::FleetManagement.LocationQuery, global::FleetManagement.LocationUpdate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLocationUpdate",
        __Marshaller_fleet_LocationQuery,
        __Marshaller_fleet_LocationUpdate);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.AssignDriverRequest, global::FleetManagement.AssignDriverRequest> __Method_AssignDriver = new grpc::Method<global::FleetManagement.AssignDriverRequest, global::FleetManagement.AssignDriverRequest>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AssignDriver",
        __Marshaller_fleet_AssignDriverRequest,
        __Marshaller_fleet_AssignDriverRequest);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::FleetManagement.PutRouteStatusQuery, global::FleetManagement.RouteStatusUpdate> __Method_UpdateRouteStatus = new grpc::Method<global::FleetManagement.PutRouteStatusQuery, global::FleetManagement.RouteStatusUpdate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRouteStatus",
        __Marshaller_fleet_PutRouteStatusQuery,
        __Marshaller_fleet_RouteStatusUpdate);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::FleetManagement.FleetManagementReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of FleetService</summary>
    [grpc::BindServiceMethod(typeof(FleetService), "BindService")]
    public abstract partial class FleetServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.Vehicle> GetVehicle(global::FleetManagement.VehicleQuery request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.InfoRequestResponse> UpdateVehicle(global::FleetManagement.PutVehicleQuery request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.InfoRequestResponse> AddVehicle(global::FleetManagement.Vehicle request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.InfoRequestResponse> DeleteVehicle(global::FleetManagement.VehicleQuery request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.Driver> GetDriver(global::FleetManagement.DriverQuery request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.InfoRequestResponse> UpdateDriver(global::FleetManagement.PutDriverQuery request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.InfoRequestResponse> AddDriver(global::FleetManagement.Driver request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.InfoRequestResponse> DeleteDriver(global::FleetManagement.DriverQuery request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.Route> GetRoute(global::FleetManagement.RouteQuery request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.InfoRequestResponse> UpdateRoute(global::FleetManagement.PutRouteQuery request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.InfoRequestResponse> AddRoute(global::FleetManagement.Route request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.InfoRequestResponse> DeleteRoute(global::FleetManagement.RouteQuery request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.Waypoint> GetWaypoint(global::FleetManagement.WaypointQuery request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.InfoRequestResponse> UpdateWaypoint(global::FleetManagement.PutWaypointQuery request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.InfoRequestResponse> AddWaypoint(global::FleetManagement.Waypoint request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.InfoRequestResponse> DeleteWaypoint(global::FleetManagement.WaypointQuery request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.LocationUpdate> GetLocationUpdate(global::FleetManagement.LocationQuery request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.AssignDriverRequest> AssignDriver(global::FleetManagement.AssignDriverRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::FleetManagement.RouteStatusUpdate> UpdateRouteStatus(global::FleetManagement.PutRouteStatusQuery request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(FleetServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetVehicle, serviceImpl.GetVehicle)
          .AddMethod(__Method_UpdateVehicle, serviceImpl.UpdateVehicle)
          .AddMethod(__Method_AddVehicle, serviceImpl.AddVehicle)
          .AddMethod(__Method_DeleteVehicle, serviceImpl.DeleteVehicle)
          .AddMethod(__Method_GetDriver, serviceImpl.GetDriver)
          .AddMethod(__Method_UpdateDriver, serviceImpl.UpdateDriver)
          .AddMethod(__Method_AddDriver, serviceImpl.AddDriver)
          .AddMethod(__Method_DeleteDriver, serviceImpl.DeleteDriver)
          .AddMethod(__Method_GetRoute, serviceImpl.GetRoute)
          .AddMethod(__Method_UpdateRoute, serviceImpl.UpdateRoute)
          .AddMethod(__Method_AddRoute, serviceImpl.AddRoute)
          .AddMethod(__Method_DeleteRoute, serviceImpl.DeleteRoute)
          .AddMethod(__Method_GetWaypoint, serviceImpl.GetWaypoint)
          .AddMethod(__Method_UpdateWaypoint, serviceImpl.UpdateWaypoint)
          .AddMethod(__Method_AddWaypoint, serviceImpl.AddWaypoint)
          .AddMethod(__Method_DeleteWaypoint, serviceImpl.DeleteWaypoint)
          .AddMethod(__Method_GetLocationUpdate, serviceImpl.GetLocationUpdate)
          .AddMethod(__Method_AssignDriver, serviceImpl.AssignDriver)
          .AddMethod(__Method_UpdateRouteStatus, serviceImpl.UpdateRouteStatus).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, FleetServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetVehicle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.VehicleQuery, global::FleetManagement.Vehicle>(serviceImpl.GetVehicle));
      serviceBinder.AddMethod(__Method_UpdateVehicle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.PutVehicleQuery, global::FleetManagement.InfoRequestResponse>(serviceImpl.UpdateVehicle));
      serviceBinder.AddMethod(__Method_AddVehicle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.Vehicle, global::FleetManagement.InfoRequestResponse>(serviceImpl.AddVehicle));
      serviceBinder.AddMethod(__Method_DeleteVehicle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.VehicleQuery, global::FleetManagement.InfoRequestResponse>(serviceImpl.DeleteVehicle));
      serviceBinder.AddMethod(__Method_GetDriver, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.DriverQuery, global::FleetManagement.Driver>(serviceImpl.GetDriver));
      serviceBinder.AddMethod(__Method_UpdateDriver, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.PutDriverQuery, global::FleetManagement.InfoRequestResponse>(serviceImpl.UpdateDriver));
      serviceBinder.AddMethod(__Method_AddDriver, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.Driver, global::FleetManagement.InfoRequestResponse>(serviceImpl.AddDriver));
      serviceBinder.AddMethod(__Method_DeleteDriver, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.DriverQuery, global::FleetManagement.InfoRequestResponse>(serviceImpl.DeleteDriver));
      serviceBinder.AddMethod(__Method_GetRoute, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.RouteQuery, global::FleetManagement.Route>(serviceImpl.GetRoute));
      serviceBinder.AddMethod(__Method_UpdateRoute, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.PutRouteQuery, global::FleetManagement.InfoRequestResponse>(serviceImpl.UpdateRoute));
      serviceBinder.AddMethod(__Method_AddRoute, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.Route, global::FleetManagement.InfoRequestResponse>(serviceImpl.AddRoute));
      serviceBinder.AddMethod(__Method_DeleteRoute, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.RouteQuery, global::FleetManagement.InfoRequestResponse>(serviceImpl.DeleteRoute));
      serviceBinder.AddMethod(__Method_GetWaypoint, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.WaypointQuery, global::FleetManagement.Waypoint>(serviceImpl.GetWaypoint));
      serviceBinder.AddMethod(__Method_UpdateWaypoint, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.PutWaypointQuery, global::FleetManagement.InfoRequestResponse>(serviceImpl.UpdateWaypoint));
      serviceBinder.AddMethod(__Method_AddWaypoint, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.Waypoint, global::FleetManagement.InfoRequestResponse>(serviceImpl.AddWaypoint));
      serviceBinder.AddMethod(__Method_DeleteWaypoint, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.WaypointQuery, global::FleetManagement.InfoRequestResponse>(serviceImpl.DeleteWaypoint));
      serviceBinder.AddMethod(__Method_GetLocationUpdate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.LocationQuery, global::FleetManagement.LocationUpdate>(serviceImpl.GetLocationUpdate));
      serviceBinder.AddMethod(__Method_AssignDriver, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.AssignDriverRequest, global::FleetManagement.AssignDriverRequest>(serviceImpl.AssignDriver));
      serviceBinder.AddMethod(__Method_UpdateRouteStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FleetManagement.PutRouteStatusQuery, global::FleetManagement.RouteStatusUpdate>(serviceImpl.UpdateRouteStatus));
    }

  }
}
#endregion
